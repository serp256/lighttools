<?xml version="1.0"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx" title="Preview" width="500" height="300" close="closeHandler()" initialize="init()">
	<fx:Script><![CDATA[
		import mx.managers.PopUpManager;

		import ru.redspell.rasterizer.flatten.FlattenMovieClip;
		import ru.redspell.rasterizer.flatten.IFlatten;

		protected var _obj:IFlatten;
		protected var _timer:Timer = new Timer(40);

		protected function init():void {
			_timer.addEventListener(TimerEvent.TIMER, timerHandler);
		}

		protected function timerHandler(event:TimerEvent):void {
			var fmc:FlattenMovieClip = _obj as FlattenMovieClip;

			fmc.nextFrame();
			frameLbl.text = 'frame: ' + fmc.curFrame;
		}

		protected function closeHandler():void {
			PopUpManager.removePopUp(this);
			_obj.dispose();
			_timer.stop();
		}

		public function preview(obj:IFlatten):void {
			_obj = obj;
			_obj.render();

			container.addChild(_obj as DisplayObject);

			var rect:Rectangle = container.getBounds(this);
			var fltMc:FlattenMovieClip = _obj as FlattenMovieClip

			//when obj rect is empty, container rect is something like (x=6710887.4, y=6710918.6, w=0, h=0); we need to find non-empty-rect frame to align container correctly
			if (fltMc != null) {
				while (rect.isEmpty() && (fltMc.curFrame < fltMc.frames.length)) {
					fltMc.nextFrame();
					rect = container.getBounds(this);
				}

				fltMc.goto(0);
			}

			if (rect.width > width) {
				container.scaleX = container.scaleY = width / rect.width;
				rect = container.getBounds(this);
			}

			if (rect.height > height) {
				container.scaleX = container.scaleY = height / rect.height;
				rect = container.getBounds(this);
			}

			container.x = (width  - rect.width) / 2 - rect.x;
			container.y = (height - rect.height) / 2 - rect.y;

			if (fltMc != null) {
				_timer.start();
			}
		}

		protected function switchFrame(next:Boolean = true):void {
			if (_timer.running) {
				playBtn.label = 'play';
				_timer.stop();
			}

			var fmc:FlattenMovieClip = _obj as FlattenMovieClip;

			if (next) {
				fmc.nextFrame();
			} else {
				fmc.prevFrame();
			}

			frameLbl.text = 'frame: ' + fmc.curFrame;
		}

		protected function togglePlay():void {
			var fmc:FlattenMovieClip = _obj as FlattenMovieClip;

			if (_timer.running) {
				playBtn.label = 'play';
				_timer.stop();
			} else {
				playBtn.label = 'stop';
				_timer.start();
			}
		}
	]]></fx:Script>

	<s:SpriteVisualElement id="container"/>

	<s:VGroup width="100%" height="100%" verticalAlign="bottom" horizontalAlign="center" paddingBottom="5">
		<s:HGroup>
			<s:Button click="switchFrame(false)" label="prev"/>
			<s:Button click="togglePlay()" id="playBtn" label="stop"/>
			<s:Button click="switchFrame()" label="next"/>
		</s:HGroup>
		<s:Label id="frameLbl"/>
	</s:VGroup>

</s:TitleWindow>
